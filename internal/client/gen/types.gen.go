// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package gen

import (
	"encoding/json"

	"github.com/deepmap/oapi-codegen/pkg/runtime"
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	ApiKeyScopes = "apiKey.Scopes"
)

// Defines values for ConnectionAttributesFailoverOnly.
const (
	ConnectionAttributesFailoverOnlyTrue ConnectionAttributesFailoverOnly = "true"
)

// Defines values for ConnectionAttributesGuacdEncryption.
const (
	None ConnectionAttributesGuacdEncryption = "none"
	Ssl  ConnectionAttributesGuacdEncryption = "ssl"
)

// Defines values for ConnectionGroupAttributesEnableSessionAffinity.
const (
	ConnectionGroupAttributesEnableSessionAffinityTrue ConnectionGroupAttributesEnableSessionAffinity = "true"
)

// Defines values for ConnectionGroupType.
const (
	ConnectionGroupTypeBALANCING      ConnectionGroupType = "BALANCING"
	ConnectionGroupTypeORGANIZATIONAL ConnectionGroupType = "ORGANIZATIONAL"
)

// Defines values for ConnectionGroupTreeAttributesEnableSessionAffinity.
const (
	ConnectionGroupTreeAttributesEnableSessionAffinityTrue ConnectionGroupTreeAttributesEnableSessionAffinity = "true"
)

// Defines values for ConnectionGroupTreeType.
const (
	ConnectionGroupTreeTypeBALANCING      ConnectionGroupTreeType = "BALANCING"
	ConnectionGroupTreeTypeORGANIZATIONAL ConnectionGroupTreeType = "ORGANIZATIONAL"
)

// Defines values for ConnectionParametersRDPColorDepth.
const (
	ConnectionParametersRDPColorDepthEmpty ConnectionParametersRDPColorDepth = ""
	ConnectionParametersRDPColorDepthN16   ConnectionParametersRDPColorDepth = "16"
	ConnectionParametersRDPColorDepthN24   ConnectionParametersRDPColorDepth = "24"
	ConnectionParametersRDPColorDepthN32   ConnectionParametersRDPColorDepth = "32"
	ConnectionParametersRDPColorDepthN8    ConnectionParametersRDPColorDepth = "8"
)

// Defines values for ConnectionParametersRDPConsole.
const (
	ConnectionParametersRDPConsoleTrue ConnectionParametersRDPConsole = "true"
)

// Defines values for ConnectionParametersRDPConsoleAudio.
const (
	ConnectionParametersRDPConsoleAudioTrue ConnectionParametersRDPConsoleAudio = "true"
)

// Defines values for ConnectionParametersRDPCreateDrivePath.
const (
	ConnectionParametersRDPCreateDrivePathTrue ConnectionParametersRDPCreateDrivePath = "true"
)

// Defines values for ConnectionParametersRDPCreateRecordingPath.
const (
	ConnectionParametersRDPCreateRecordingPathTrue ConnectionParametersRDPCreateRecordingPath = "true"
)

// Defines values for ConnectionParametersRDPDisableAudio.
const (
	ConnectionParametersRDPDisableAudioTrue ConnectionParametersRDPDisableAudio = "true"
)

// Defines values for ConnectionParametersRDPDisableAuth.
const (
	ConnectionParametersRDPDisableAuthTrue ConnectionParametersRDPDisableAuth = "true"
)

// Defines values for ConnectionParametersRDPDisableBitmapCaching.
const (
	ConnectionParametersRDPDisableBitmapCachingTrue ConnectionParametersRDPDisableBitmapCaching = "true"
)

// Defines values for ConnectionParametersRDPDisableCopy.
const (
	ConnectionParametersRDPDisableCopyTrue ConnectionParametersRDPDisableCopy = "true"
)

// Defines values for ConnectionParametersRDPDisableDownload.
const (
	ConnectionParametersRDPDisableDownloadTrue ConnectionParametersRDPDisableDownload = "true"
)

// Defines values for ConnectionParametersRDPDisableGfx.
const (
	ConnectionParametersRDPDisableGfxTrue ConnectionParametersRDPDisableGfx = "true"
)

// Defines values for ConnectionParametersRDPDisableGlyphCaching.
const (
	ConnectionParametersRDPDisableGlyphCachingTrue ConnectionParametersRDPDisableGlyphCaching = "true"
)

// Defines values for ConnectionParametersRDPDisableOffscreenCaching.
const (
	ConnectionParametersRDPDisableOffscreenCachingTrue ConnectionParametersRDPDisableOffscreenCaching = "true"
)

// Defines values for ConnectionParametersRDPDisablePaste.
const (
	ConnectionParametersRDPDisablePasteTrue ConnectionParametersRDPDisablePaste = "true"
)

// Defines values for ConnectionParametersRDPDisableUpload.
const (
	ConnectionParametersRDPDisableUploadTrue ConnectionParametersRDPDisableUpload = "true"
)

// Defines values for ConnectionParametersRDPEnableAudio.
const (
	ConnectionParametersRDPEnableAudioTrue ConnectionParametersRDPEnableAudio = "true"
)

// Defines values for ConnectionParametersRDPEnableAudioInput.
const (
	ConnectionParametersRDPEnableAudioInputTrue ConnectionParametersRDPEnableAudioInput = "true"
)

// Defines values for ConnectionParametersRDPEnableDesktopComposition.
const (
	ConnectionParametersRDPEnableDesktopCompositionTrue ConnectionParametersRDPEnableDesktopComposition = "true"
)

// Defines values for ConnectionParametersRDPEnableDrive.
const (
	ConnectionParametersRDPEnableDriveTrue ConnectionParametersRDPEnableDrive = "true"
)

// Defines values for ConnectionParametersRDPEnableFontSmoothing.
const (
	ConnectionParametersRDPEnableFontSmoothingTrue ConnectionParametersRDPEnableFontSmoothing = "true"
)

// Defines values for ConnectionParametersRDPEnableFullWindowDrag.
const (
	ConnectionParametersRDPEnableFullWindowDragTrue ConnectionParametersRDPEnableFullWindowDrag = "true"
)

// Defines values for ConnectionParametersRDPEnableMenuAnimations.
const (
	ConnectionParametersRDPEnableMenuAnimationsTrue ConnectionParametersRDPEnableMenuAnimations = "true"
)

// Defines values for ConnectionParametersRDPEnablePrinting.
const (
	ConnectionParametersRDPEnablePrintingTrue ConnectionParametersRDPEnablePrinting = "true"
)

// Defines values for ConnectionParametersRDPEnableTheming.
const (
	ConnectionParametersRDPEnableThemingTrue ConnectionParametersRDPEnableTheming = "true"
)

// Defines values for ConnectionParametersRDPEnableTouch.
const (
	ConnectionParametersRDPEnableTouchTrue ConnectionParametersRDPEnableTouch = "true"
)

// Defines values for ConnectionParametersRDPEnableWallpaper.
const (
	ConnectionParametersRDPEnableWallpaperTrue ConnectionParametersRDPEnableWallpaper = "true"
)

// Defines values for ConnectionParametersRDPForceLossless.
const (
	ConnectionParametersRDPForceLosslessTrue ConnectionParametersRDPForceLossless = "true"
)

// Defines values for ConnectionParametersRDPIgnoreCert.
const (
	ConnectionParametersRDPIgnoreCertTrue ConnectionParametersRDPIgnoreCert = "true"
)

// Defines values for ConnectionParametersRDPNormalizeClipboard.
const (
	ConnectionParametersRDPNormalizeClipboardEmpty    ConnectionParametersRDPNormalizeClipboard = ""
	ConnectionParametersRDPNormalizeClipboardPreserve ConnectionParametersRDPNormalizeClipboard = "preserve"
	ConnectionParametersRDPNormalizeClipboardUnix     ConnectionParametersRDPNormalizeClipboard = "unix"
	ConnectionParametersRDPNormalizeClipboardWindows  ConnectionParametersRDPNormalizeClipboard = "windows"
)

// Defines values for ConnectionParametersRDPReadOnly.
const (
	ConnectionParametersRDPReadOnlyTrue ConnectionParametersRDPReadOnly = "true"
)

// Defines values for ConnectionParametersRDPRecordingExcludeMouse.
const (
	ConnectionParametersRDPRecordingExcludeMouseTrue ConnectionParametersRDPRecordingExcludeMouse = "true"
)

// Defines values for ConnectionParametersRDPRecordingExcludeOutput.
const (
	ConnectionParametersRDPRecordingExcludeOutputTrue ConnectionParametersRDPRecordingExcludeOutput = "true"
)

// Defines values for ConnectionParametersRDPRecordingIncludeKeys.
const (
	ConnectionParametersRDPRecordingIncludeKeysTrue ConnectionParametersRDPRecordingIncludeKeys = "true"
)

// Defines values for ConnectionParametersRDPResizeMethod.
const (
	ConnectionParametersRDPResizeMethodDisplayUpdate ConnectionParametersRDPResizeMethod = "display-update"
	ConnectionParametersRDPResizeMethodEmpty         ConnectionParametersRDPResizeMethod = ""
	ConnectionParametersRDPResizeMethodReconnect     ConnectionParametersRDPResizeMethod = "reconnect"
)

// Defines values for ConnectionParametersRDPSecurity.
const (
	ConnectionParametersRDPSecurityAny       ConnectionParametersRDPSecurity = "any"
	ConnectionParametersRDPSecurityEmpty     ConnectionParametersRDPSecurity = ""
	ConnectionParametersRDPSecurityNla       ConnectionParametersRDPSecurity = "nla"
	ConnectionParametersRDPSecurityRdp       ConnectionParametersRDPSecurity = "rdp"
	ConnectionParametersRDPSecurityTls       ConnectionParametersRDPSecurity = "tls"
	ConnectionParametersRDPSecurityVmconnect ConnectionParametersRDPSecurity = "vmconnect"
)

// Defines values for ConnectionParametersRDPServerLayout.
const (
	ConnectionParametersRDPServerLayoutDaDkQwerty    ConnectionParametersRDPServerLayout = "da-dk-qwerty"
	ConnectionParametersRDPServerLayoutDeChQwertz    ConnectionParametersRDPServerLayout = "de-ch-qwertz"
	ConnectionParametersRDPServerLayoutDeDeQwertz    ConnectionParametersRDPServerLayout = "de-de-qwertz"
	ConnectionParametersRDPServerLayoutEmpty         ConnectionParametersRDPServerLayout = ""
	ConnectionParametersRDPServerLayoutEnGbQwerty    ConnectionParametersRDPServerLayout = "en-gb-qwerty"
	ConnectionParametersRDPServerLayoutEnUsQwerty    ConnectionParametersRDPServerLayout = "en-us-qwerty"
	ConnectionParametersRDPServerLayoutEsEsQwerty    ConnectionParametersRDPServerLayout = "es-es-qwerty"
	ConnectionParametersRDPServerLayoutEsLatamQwerty ConnectionParametersRDPServerLayout = "es-latam-qwerty"
	ConnectionParametersRDPServerLayoutFailsafe      ConnectionParametersRDPServerLayout = "failsafe"
	ConnectionParametersRDPServerLayoutFrBeAzerty    ConnectionParametersRDPServerLayout = "fr-be-azerty"
	ConnectionParametersRDPServerLayoutFrCaQwerty    ConnectionParametersRDPServerLayout = "fr-ca-qwerty"
	ConnectionParametersRDPServerLayoutFrChQwertz    ConnectionParametersRDPServerLayout = "fr-ch-qwertz"
	ConnectionParametersRDPServerLayoutFrFrAzerty    ConnectionParametersRDPServerLayout = "fr-fr-azerty"
	ConnectionParametersRDPServerLayoutHuHuQwertz    ConnectionParametersRDPServerLayout = "hu-hu-qwertz"
	ConnectionParametersRDPServerLayoutItItQwerty    ConnectionParametersRDPServerLayout = "it-it-qwerty"
	ConnectionParametersRDPServerLayoutJaJpQwerty    ConnectionParametersRDPServerLayout = "ja-jp-qwerty"
	ConnectionParametersRDPServerLayoutNoNoQwerty    ConnectionParametersRDPServerLayout = "no-no-qwerty"
	ConnectionParametersRDPServerLayoutPlPlQwerty    ConnectionParametersRDPServerLayout = "pl-pl-qwerty"
	ConnectionParametersRDPServerLayoutPtBrQwerty    ConnectionParametersRDPServerLayout = "pt-br-qwerty"
	ConnectionParametersRDPServerLayoutSvSeQwerty    ConnectionParametersRDPServerLayout = "sv-se-qwerty"
	ConnectionParametersRDPServerLayoutTrTrQwerty    ConnectionParametersRDPServerLayout = "tr-tr-qwerty"
)

// Defines values for ConnectionParametersRDPSftpDisableDownload.
const (
	ConnectionParametersRDPSftpDisableDownloadTrue ConnectionParametersRDPSftpDisableDownload = "true"
)

// Defines values for ConnectionParametersRDPSftpDisableUpload.
const (
	ConnectionParametersRDPSftpDisableUploadTrue ConnectionParametersRDPSftpDisableUpload = "true"
)

// Defines values for ConnectionParametersRDPWolSendPacket.
const (
	ConnectionParametersRDPWolSendPacketTrue ConnectionParametersRDPWolSendPacket = "true"
)

// Defines values for ConnectionParametersVNCClipboardEncoding.
const (
	ConnectionParametersVNCClipboardEncodingCP1252 ConnectionParametersVNCClipboardEncoding = "CP1252"
	ConnectionParametersVNCClipboardEncodingEmpty  ConnectionParametersVNCClipboardEncoding = ""
	ConnectionParametersVNCClipboardEncodingUTF16  ConnectionParametersVNCClipboardEncoding = "UTF-16"
	ConnectionParametersVNCClipboardEncodingUTF8   ConnectionParametersVNCClipboardEncoding = "UTF-8"
)

// Defines values for ConnectionParametersVNCColorDepth.
const (
	ConnectionParametersVNCColorDepthEmpty ConnectionParametersVNCColorDepth = ""
	ConnectionParametersVNCColorDepthN16   ConnectionParametersVNCColorDepth = "16"
	ConnectionParametersVNCColorDepthN24   ConnectionParametersVNCColorDepth = "24"
	ConnectionParametersVNCColorDepthN32   ConnectionParametersVNCColorDepth = "32"
	ConnectionParametersVNCColorDepthN8    ConnectionParametersVNCColorDepth = "8"
)

// Defines values for ConnectionParametersVNCCreateRecordingPath.
const (
	ConnectionParametersVNCCreateRecordingPathTrue ConnectionParametersVNCCreateRecordingPath = "true"
)

// Defines values for ConnectionParametersVNCCursor.
const (
	ConnectionParametersVNCCursorEmpty  ConnectionParametersVNCCursor = ""
	ConnectionParametersVNCCursorLocal  ConnectionParametersVNCCursor = "local"
	ConnectionParametersVNCCursorRemote ConnectionParametersVNCCursor = "remote"
)

// Defines values for ConnectionParametersVNCDisableCopy.
const (
	ConnectionParametersVNCDisableCopyTrue ConnectionParametersVNCDisableCopy = "true"
)

// Defines values for ConnectionParametersVNCDisablePaste.
const (
	ConnectionParametersVNCDisablePasteTrue ConnectionParametersVNCDisablePaste = "true"
)

// Defines values for ConnectionParametersVNCEnableAudio.
const (
	ConnectionParametersVNCEnableAudioTrue ConnectionParametersVNCEnableAudio = "true"
)

// Defines values for ConnectionParametersVNCForceLossless.
const (
	ConnectionParametersVNCForceLosslessTrue ConnectionParametersVNCForceLossless = "true"
)

// Defines values for ConnectionParametersVNCReadOnly.
const (
	ConnectionParametersVNCReadOnlyTrue ConnectionParametersVNCReadOnly = "true"
)

// Defines values for ConnectionParametersVNCRecordingExcludeMouse.
const (
	ConnectionParametersVNCRecordingExcludeMouseTrue ConnectionParametersVNCRecordingExcludeMouse = "true"
)

// Defines values for ConnectionParametersVNCRecordingExcludeOutput.
const (
	ConnectionParametersVNCRecordingExcludeOutputTrue ConnectionParametersVNCRecordingExcludeOutput = "true"
)

// Defines values for ConnectionParametersVNCRecordingIncludeKeys.
const (
	ConnectionParametersVNCRecordingIncludeKeysTrue ConnectionParametersVNCRecordingIncludeKeys = "true"
)

// Defines values for ConnectionParametersVNCSftpDisableDownload.
const (
	ConnectionParametersVNCSftpDisableDownloadTrue ConnectionParametersVNCSftpDisableDownload = "true"
)

// Defines values for ConnectionParametersVNCSftpDisableUpload.
const (
	ConnectionParametersVNCSftpDisableUploadTrue ConnectionParametersVNCSftpDisableUpload = "true"
)

// Defines values for ConnectionParametersVNCSwapRedBlue.
const (
	ConnectionParametersVNCSwapRedBlueTrue ConnectionParametersVNCSwapRedBlue = "true"
)

// Defines values for ConnectionParametersVNCWolSendPacket.
const (
	ConnectionParametersVNCWolSendPacketTrue ConnectionParametersVNCWolSendPacket = "true"
)

// Defines values for ConnectionProtocol.
const (
	Kubernetes ConnectionProtocol = "kubernetes"
	Rdp        ConnectionProtocol = "rdp"
	Ssh        ConnectionProtocol = "ssh"
	Telnet     ConnectionProtocol = "telnet"
	Vnc        ConnectionProtocol = "vnc"
)

// Defines values for JSONPatchRequestAddOp.
const (
	Add JSONPatchRequestAddOp = "add"
)

// Defines values for JSONPatchRequestRemoveOp.
const (
	Remove JSONPatchRequestRemoveOp = "remove"
)

// Defines values for ObjectPermissions.
const (
	ObjectPermissionsADMINISTER ObjectPermissions = "ADMINISTER"
	ObjectPermissionsDELETE     ObjectPermissions = "DELETE"
	ObjectPermissionsREAD       ObjectPermissions = "READ"
	ObjectPermissionsUPDATE     ObjectPermissions = "UPDATE"
)

// Defines values for SystemPermissions.
const (
	SystemPermissionsADMINISTER           SystemPermissions = "ADMINISTER"
	SystemPermissionsCREATECONNECTION     SystemPermissions = "CREATE_CONNECTION"
	SystemPermissionsCREATESHARINGPROFILE SystemPermissions = "CREATE_SHARING_PROFILE"
	SystemPermissionsCREATEUSER           SystemPermissions = "CREATE_USER"
	SystemPermissionsCREATEUSERGROUP      SystemPermissions = "CREATE_USER_GROUP"
)

// Defines values for UserAttributesDisabled.
const (
	UserAttributesDisabledTrue UserAttributesDisabled = "true"
)

// Defines values for UserAttributesExpired.
const (
	UserAttributesExpiredTrue UserAttributesExpired = "true"
)

// Defines values for UserGroupAttributesDisabled.
const (
	True UserGroupAttributesDisabled = "true"
)

// ActiveConnection defines model for ActiveConnection.
type ActiveConnection struct {
	Connectable          *bool   `json:"connectable,omitempty"`
	ConnectionIdentifier *string `json:"connectionIdentifier"`
	Identifier           string  `json:"identifier"`
	RemoteHost           *string `json:"remoteHost"`
	StartDate            *string `json:"startDate"`
	Username             *string `json:"username"`
}

// ActiveConnections defines model for ActiveConnections.
type ActiveConnections map[string]ActiveConnection

// Connection defines model for Connection.
type Connection struct {
	ActiveConnections int                  `json:"activeConnections"`
	Attributes        ConnectionAttributes `json:"attributes"`
	Identifier        string               `json:"identifier"`
	LastActive        *int                 `json:"lastActive"`
	Name              string               `json:"name"`
	ParentIdentifier  string               `json:"parentIdentifier"`
	Protocol          ConnectionProtocol   `json:"protocol"`
}

// ConnectionAttributes defines model for ConnectionAttributes.
type ConnectionAttributes struct {
	FailoverOnly          *ConnectionAttributesFailoverOnly    `json:"failover-only"`
	GuacdEncryption       *ConnectionAttributesGuacdEncryption `json:"guacd-encryption"`
	GuacdHostname         *string                              `json:"guacd-hostname"`
	GuacdPort             *string                              `json:"guacd-port"`
	MaxConnections        *string                              `json:"max-connections"`
	MaxConnectionsPerUser *string                              `json:"max-connections-per-user"`
	Weight                *string                              `json:"weight"`
}

// ConnectionAttributesFailoverOnly defines model for ConnectionAttributes.FailoverOnly.
type ConnectionAttributesFailoverOnly string

// ConnectionAttributesGuacdEncryption defines model for ConnectionAttributes.GuacdEncryption.
type ConnectionAttributesGuacdEncryption string

// ConnectionGroup defines model for ConnectionGroup.
type ConnectionGroup struct {
	ActiveConnections *int `json:"activeConnections,omitempty"`
	Attributes        struct {
		EnableSessionAffinity *ConnectionGroupAttributesEnableSessionAffinity `json:"enable-session-affinity,omitempty"`
		MaxConnections        *string                                         `json:"max-connections"`
		MaxConnectionsPerUser *string                                         `json:"max-connections-per-user"`
	} `json:"attributes"`
	Identifier       *string             `json:"identifier,omitempty"`
	Name             string              `json:"name"`
	ParentIdentifier *string             `json:"parentIdentifier,omitempty"`
	Type             ConnectionGroupType `json:"type"`
}

// ConnectionGroupAttributesEnableSessionAffinity defines model for ConnectionGroup.Attributes.EnableSessionAffinity.
type ConnectionGroupAttributesEnableSessionAffinity string

// ConnectionGroupType defines model for ConnectionGroup.Type.
type ConnectionGroupType string

// ConnectionGroupTree defines model for ConnectionGroupTree.
type ConnectionGroupTree struct {
	ActiveConnections *int `json:"activeConnections,omitempty"`
	Attributes        struct {
		EnableSessionAffinity *ConnectionGroupTreeAttributesEnableSessionAffinity `json:"enable-session-affinity,omitempty"`
		MaxConnections        *string                                             `json:"max-connections"`
		MaxConnectionsPerUser *string                                             `json:"max-connections-per-user"`
	} `json:"attributes"`
	ChildConnectionGroups *[]ConnectionGroup      `json:"childConnectionGroups,omitempty"`
	ChildConnections      *[]Connection           `json:"childConnections,omitempty"`
	Identifier            *string                 `json:"identifier,omitempty"`
	Name                  string                  `json:"name"`
	ParentIdentifier      *string                 `json:"parentIdentifier,omitempty"`
	Type                  ConnectionGroupTreeType `json:"type"`
}

// ConnectionGroupTreeAttributesEnableSessionAffinity defines model for ConnectionGroupTree.Attributes.EnableSessionAffinity.
type ConnectionGroupTreeAttributesEnableSessionAffinity string

// ConnectionGroupTreeType defines model for ConnectionGroupTree.Type.
type ConnectionGroupTreeType string

// ConnectionGroups defines model for ConnectionGroups.
type ConnectionGroups map[string]ConnectionGroup

// ConnectionParameters defines model for ConnectionParameters.
type ConnectionParameters = []ConnectionParameters_Item

// ConnectionParameters_Item defines model for ConnectionParameters.Item.
type ConnectionParameters_Item struct {
	union json.RawMessage
}

// ConnectionParametersRDP defines model for ConnectionParametersRDP.
type ConnectionParametersRDP struct {
	AudioServername          *string                                          `json:"audio-servername,omitempty"`
	ClientName               *string                                          `json:"client-name,omitempty"`
	ColorDepth               *ConnectionParametersRDPColorDepth               `json:"color-depth,omitempty"`
	Console                  *ConnectionParametersRDPConsole                  `json:"console,omitempty"`
	ConsoleAudio             *ConnectionParametersRDPConsoleAudio             `json:"console-audio,omitempty"`
	CreateDrivePath          *ConnectionParametersRDPCreateDrivePath          `json:"create-drive-path,omitempty"`
	CreateRecordingPath      *ConnectionParametersRDPCreateRecordingPath      `json:"create-recording-path,omitempty"`
	DisableAudio             *ConnectionParametersRDPDisableAudio             `json:"disable-audio,omitempty"`
	DisableAuth              *ConnectionParametersRDPDisableAuth              `json:"disable-auth,omitempty"`
	DisableBitmapCaching     *ConnectionParametersRDPDisableBitmapCaching     `json:"disable-bitmap-caching,omitempty"`
	DisableCopy              *ConnectionParametersRDPDisableCopy              `json:"disable-copy,omitempty"`
	DisableDownload          *ConnectionParametersRDPDisableDownload          `json:"disable-download,omitempty"`
	DisableGfx               *ConnectionParametersRDPDisableGfx               `json:"disable-gfx,omitempty"`
	DisableGlyphCaching      *ConnectionParametersRDPDisableGlyphCaching      `json:"disable-glyph-caching,omitempty"`
	DisableOffscreenCaching  *ConnectionParametersRDPDisableOffscreenCaching  `json:"disable-offscreen-caching,omitempty"`
	DisablePaste             *ConnectionParametersRDPDisablePaste             `json:"disable-paste,omitempty"`
	DisableUpload            *ConnectionParametersRDPDisableUpload            `json:"disable-upload,omitempty"`
	Domain                   *string                                          `json:"domain,omitempty"`
	Dpi                      *string                                          `json:"dpi,omitempty"`
	DriveName                *string                                          `json:"drive-name,omitempty"`
	DrivePath                *string                                          `json:"drive-path,omitempty"`
	EnableAudio              *ConnectionParametersRDPEnableAudio              `json:"enable-audio,omitempty"`
	EnableAudioInput         *ConnectionParametersRDPEnableAudioInput         `json:"enable-audio-input,omitempty"`
	EnableDesktopComposition *ConnectionParametersRDPEnableDesktopComposition `json:"enable-desktop-composition,omitempty"`
	EnableDrive              *ConnectionParametersRDPEnableDrive              `json:"enable-drive,omitempty"`
	EnableFontSmoothing      *ConnectionParametersRDPEnableFontSmoothing      `json:"enable-font-smoothing,omitempty"`
	EnableFullWindowDrag     *ConnectionParametersRDPEnableFullWindowDrag     `json:"enable-full-window-drag,omitempty"`
	EnableMenuAnimations     *ConnectionParametersRDPEnableMenuAnimations     `json:"enable-menu-animations,omitempty"`
	EnablePrinting           *ConnectionParametersRDPEnablePrinting           `json:"enable-printing,omitempty"`
	EnableSftp               *string                                          `json:"enable-sftp,omitempty"`
	EnableTheming            *ConnectionParametersRDPEnableTheming            `json:"enable-theming,omitempty"`
	EnableTouch              *ConnectionParametersRDPEnableTouch              `json:"enable-touch,omitempty"`
	EnableWallpaper          *ConnectionParametersRDPEnableWallpaper          `json:"enable-wallpaper,omitempty"`
	ForceLossless            *ConnectionParametersRDPForceLossless            `json:"force-lossless,omitempty"`
	GatewayDomain            *string                                          `json:"gateway-domain,omitempty"`
	GatewayHostname          *string                                          `json:"gateway-hostname,omitempty"`
	GatewayPassword          *string                                          `json:"gateway-password,omitempty"`
	GatewayPort              *string                                          `json:"gateway-port,omitempty"`
	GatewayUsername          *string                                          `json:"gateway-username,omitempty"`
	Height                   *string                                          `json:"height,omitempty"`
	Hostname                 *string                                          `json:"hostname,omitempty"`
	IgnoreCert               *ConnectionParametersRDPIgnoreCert               `json:"ignore-cert,omitempty"`
	InitialProgram           *string                                          `json:"initial-program,omitempty"`
	LoadBalanceInfo          *string                                          `json:"load-balance-info,omitempty"`
	NormalizeClipboard       *ConnectionParametersRDPNormalizeClipboard       `json:"normalize-clipboard,omitempty"`
	Password                 *string                                          `json:"password,omitempty"`
	Port                     *string                                          `json:"port,omitempty"`
	PreconnectionBlob        *string                                          `json:"preconnection-blob,omitempty"`
	PreconnectionId          *string                                          `json:"preconnection-id,omitempty"`
	PrinterName              *string                                          `json:"printer-name,omitempty"`
	ReadOnly                 *ConnectionParametersRDPReadOnly                 `json:"read-only,omitempty"`
	RecordingExcludeMouse    *ConnectionParametersRDPRecordingExcludeMouse    `json:"recording-exclude-mouse,omitempty"`
	RecordingExcludeOutput   *ConnectionParametersRDPRecordingExcludeOutput   `json:"recording-exclude-output,omitempty"`
	RecordingIncludeKeys     *ConnectionParametersRDPRecordingIncludeKeys     `json:"recording-include-keys,omitempty"`
	RecordingName            *string                                          `json:"recording-name,omitempty"`
	RecordingPath            *string                                          `json:"recording-path,omitempty"`
	RemoteApp                *string                                          `json:"remote-app,omitempty"`
	RemoteAppArgs            *string                                          `json:"remote-app-args,omitempty"`
	RemoteAppDir             *string                                          `json:"remote-app-dir,omitempty"`
	ResizeMethod             *ConnectionParametersRDPResizeMethod             `json:"resize-method,omitempty"`
	Security                 *ConnectionParametersRDPSecurity                 `json:"security,omitempty"`
	ServerLayout             *ConnectionParametersRDPServerLayout             `json:"server-layout,omitempty"`
	SftpDirectory            *string                                          `json:"sftp-directory,omitempty"`
	SftpDisableDownload      *ConnectionParametersRDPSftpDisableDownload      `json:"sftp-disable-download,omitempty"`
	SftpDisableUpload        *ConnectionParametersRDPSftpDisableUpload        `json:"sftp-disable-upload,omitempty"`
	SftpHostKey              *string                                          `json:"sftp-host-key,omitempty"`
	SftpHostname             *string                                          `json:"sftp-hostname,omitempty"`
	SftpPassphrase           *string                                          `json:"sftp-passphrase,omitempty"`
	SftpPassword             *string                                          `json:"sftp-password,omitempty"`
	SftpPort                 *string                                          `json:"sftp-port,omitempty"`
	SftpPrivateKey           *string                                          `json:"sftp-private-key,omitempty"`
	SftpRootDirectory        *string                                          `json:"sftp-root-directory,omitempty"`
	SftpServerAliveInterval  *string                                          `json:"sftp-server-alive-interval,omitempty"`
	SftpUsername             *string                                          `json:"sftp-username,omitempty"`
	StaticChannels           *string                                          `json:"static-channels,omitempty"`
	Timezone                 *string                                          `json:"timezone,omitempty"`
	Username                 *string                                          `json:"username,omitempty"`
	Width                    *string                                          `json:"width,omitempty"`
	WolBroadcastAddr         *string                                          `json:"wol-broadcast-addr,omitempty"`
	WolMacAddr               *string                                          `json:"wol-mac-addr,omitempty"`
	WolSendPacket            *ConnectionParametersRDPWolSendPacket            `json:"wol-send-packet,omitempty"`
	WolUdpPort               *string                                          `json:"wol-udp-port,omitempty"`
	WolWaitTime              *string                                          `json:"wol-wait-time,omitempty"`
}

// ConnectionParametersRDPColorDepth defines model for ConnectionParametersRDP.ColorDepth.
type ConnectionParametersRDPColorDepth string

// ConnectionParametersRDPConsole defines model for ConnectionParametersRDP.Console.
type ConnectionParametersRDPConsole string

// ConnectionParametersRDPConsoleAudio defines model for ConnectionParametersRDP.ConsoleAudio.
type ConnectionParametersRDPConsoleAudio string

// ConnectionParametersRDPCreateDrivePath defines model for ConnectionParametersRDP.CreateDrivePath.
type ConnectionParametersRDPCreateDrivePath string

// ConnectionParametersRDPCreateRecordingPath defines model for ConnectionParametersRDP.CreateRecordingPath.
type ConnectionParametersRDPCreateRecordingPath string

// ConnectionParametersRDPDisableAudio defines model for ConnectionParametersRDP.DisableAudio.
type ConnectionParametersRDPDisableAudio string

// ConnectionParametersRDPDisableAuth defines model for ConnectionParametersRDP.DisableAuth.
type ConnectionParametersRDPDisableAuth string

// ConnectionParametersRDPDisableBitmapCaching defines model for ConnectionParametersRDP.DisableBitmapCaching.
type ConnectionParametersRDPDisableBitmapCaching string

// ConnectionParametersRDPDisableCopy defines model for ConnectionParametersRDP.DisableCopy.
type ConnectionParametersRDPDisableCopy string

// ConnectionParametersRDPDisableDownload defines model for ConnectionParametersRDP.DisableDownload.
type ConnectionParametersRDPDisableDownload string

// ConnectionParametersRDPDisableGfx defines model for ConnectionParametersRDP.DisableGfx.
type ConnectionParametersRDPDisableGfx string

// ConnectionParametersRDPDisableGlyphCaching defines model for ConnectionParametersRDP.DisableGlyphCaching.
type ConnectionParametersRDPDisableGlyphCaching string

// ConnectionParametersRDPDisableOffscreenCaching defines model for ConnectionParametersRDP.DisableOffscreenCaching.
type ConnectionParametersRDPDisableOffscreenCaching string

// ConnectionParametersRDPDisablePaste defines model for ConnectionParametersRDP.DisablePaste.
type ConnectionParametersRDPDisablePaste string

// ConnectionParametersRDPDisableUpload defines model for ConnectionParametersRDP.DisableUpload.
type ConnectionParametersRDPDisableUpload string

// ConnectionParametersRDPEnableAudio defines model for ConnectionParametersRDP.EnableAudio.
type ConnectionParametersRDPEnableAudio string

// ConnectionParametersRDPEnableAudioInput defines model for ConnectionParametersRDP.EnableAudioInput.
type ConnectionParametersRDPEnableAudioInput string

// ConnectionParametersRDPEnableDesktopComposition defines model for ConnectionParametersRDP.EnableDesktopComposition.
type ConnectionParametersRDPEnableDesktopComposition string

// ConnectionParametersRDPEnableDrive defines model for ConnectionParametersRDP.EnableDrive.
type ConnectionParametersRDPEnableDrive string

// ConnectionParametersRDPEnableFontSmoothing defines model for ConnectionParametersRDP.EnableFontSmoothing.
type ConnectionParametersRDPEnableFontSmoothing string

// ConnectionParametersRDPEnableFullWindowDrag defines model for ConnectionParametersRDP.EnableFullWindowDrag.
type ConnectionParametersRDPEnableFullWindowDrag string

// ConnectionParametersRDPEnableMenuAnimations defines model for ConnectionParametersRDP.EnableMenuAnimations.
type ConnectionParametersRDPEnableMenuAnimations string

// ConnectionParametersRDPEnablePrinting defines model for ConnectionParametersRDP.EnablePrinting.
type ConnectionParametersRDPEnablePrinting string

// ConnectionParametersRDPEnableTheming defines model for ConnectionParametersRDP.EnableTheming.
type ConnectionParametersRDPEnableTheming string

// ConnectionParametersRDPEnableTouch defines model for ConnectionParametersRDP.EnableTouch.
type ConnectionParametersRDPEnableTouch string

// ConnectionParametersRDPEnableWallpaper defines model for ConnectionParametersRDP.EnableWallpaper.
type ConnectionParametersRDPEnableWallpaper string

// ConnectionParametersRDPForceLossless defines model for ConnectionParametersRDP.ForceLossless.
type ConnectionParametersRDPForceLossless string

// ConnectionParametersRDPIgnoreCert defines model for ConnectionParametersRDP.IgnoreCert.
type ConnectionParametersRDPIgnoreCert string

// ConnectionParametersRDPNormalizeClipboard defines model for ConnectionParametersRDP.NormalizeClipboard.
type ConnectionParametersRDPNormalizeClipboard string

// ConnectionParametersRDPReadOnly defines model for ConnectionParametersRDP.ReadOnly.
type ConnectionParametersRDPReadOnly string

// ConnectionParametersRDPRecordingExcludeMouse defines model for ConnectionParametersRDP.RecordingExcludeMouse.
type ConnectionParametersRDPRecordingExcludeMouse string

// ConnectionParametersRDPRecordingExcludeOutput defines model for ConnectionParametersRDP.RecordingExcludeOutput.
type ConnectionParametersRDPRecordingExcludeOutput string

// ConnectionParametersRDPRecordingIncludeKeys defines model for ConnectionParametersRDP.RecordingIncludeKeys.
type ConnectionParametersRDPRecordingIncludeKeys string

// ConnectionParametersRDPResizeMethod defines model for ConnectionParametersRDP.ResizeMethod.
type ConnectionParametersRDPResizeMethod string

// ConnectionParametersRDPSecurity defines model for ConnectionParametersRDP.Security.
type ConnectionParametersRDPSecurity string

// ConnectionParametersRDPServerLayout defines model for ConnectionParametersRDP.ServerLayout.
type ConnectionParametersRDPServerLayout string

// ConnectionParametersRDPSftpDisableDownload defines model for ConnectionParametersRDP.SftpDisableDownload.
type ConnectionParametersRDPSftpDisableDownload string

// ConnectionParametersRDPSftpDisableUpload defines model for ConnectionParametersRDP.SftpDisableUpload.
type ConnectionParametersRDPSftpDisableUpload string

// ConnectionParametersRDPWolSendPacket defines model for ConnectionParametersRDP.WolSendPacket.
type ConnectionParametersRDPWolSendPacket string

// ConnectionParametersVNC defines model for ConnectionParametersVNC.
type ConnectionParametersVNC struct {
	AudioServername         *string                                        `json:"audio-servername,omitempty"`
	ClipboardEncoding       *ConnectionParametersVNCClipboardEncoding      `json:"clipboard-encoding,omitempty"`
	ColorDepth              *ConnectionParametersVNCColorDepth             `json:"color-depth,omitempty"`
	CreateRecordingPath     *ConnectionParametersVNCCreateRecordingPath    `json:"create-recording-path,omitempty"`
	Cursor                  *ConnectionParametersVNCCursor                 `json:"cursor,omitempty"`
	DestHost                *string                                        `json:"dest-host,omitempty"`
	DestPort                *string                                        `json:"dest-port,omitempty"`
	DisableCopy             *ConnectionParametersVNCDisableCopy            `json:"disable-copy,omitempty"`
	DisablePaste            *ConnectionParametersVNCDisablePaste           `json:"disable-paste,omitempty"`
	EnableAudio             *ConnectionParametersVNCEnableAudio            `json:"enable-audio,omitempty"`
	EnableSftp              *string                                        `json:"enable-sftp,omitempty"`
	ForceLossless           *ConnectionParametersVNCForceLossless          `json:"force-lossless,omitempty"`
	Hostname                *string                                        `json:"hostname,omitempty"`
	Password                *string                                        `json:"password,omitempty"`
	Port                    *string                                        `json:"port,omitempty"`
	ReadOnly                *ConnectionParametersVNCReadOnly               `json:"read-only,omitempty"`
	RecordingExcludeMouse   *ConnectionParametersVNCRecordingExcludeMouse  `json:"recording-exclude-mouse,omitempty"`
	RecordingExcludeOutput  *ConnectionParametersVNCRecordingExcludeOutput `json:"recording-exclude-output,omitempty"`
	RecordingIncludeKeys    *ConnectionParametersVNCRecordingIncludeKeys   `json:"recording-include-keys,omitempty"`
	RecordingName           *string                                        `json:"recording-name,omitempty"`
	RecordingPath           *string                                        `json:"recording-path,omitempty"`
	SftpDirectory           *string                                        `json:"sftp-directory,omitempty"`
	SftpDisableDownload     *ConnectionParametersVNCSftpDisableDownload    `json:"sftp-disable-download,omitempty"`
	SftpDisableUpload       *ConnectionParametersVNCSftpDisableUpload      `json:"sftp-disable-upload,omitempty"`
	SftpHostKey             *string                                        `json:"sftp-host-key,omitempty"`
	SftpHostname            *string                                        `json:"sftp-hostname,omitempty"`
	SftpPassphrase          *string                                        `json:"sftp-passphrase,omitempty"`
	SftpPassword            *string                                        `json:"sftp-password,omitempty"`
	SftpPort                *string                                        `json:"sftp-port,omitempty"`
	SftpPrivateKey          *string                                        `json:"sftp-private-key,omitempty"`
	SftpRootDirectory       *string                                        `json:"sftp-root-directory,omitempty"`
	SftpServerAliveInterval *string                                        `json:"sftp-server-alive-interval,omitempty"`
	SftpUsername            *string                                        `json:"sftp-username,omitempty"`
	SwapRedBlue             *ConnectionParametersVNCSwapRedBlue            `json:"swap-red-blue,omitempty"`
	Username                *string                                        `json:"username,omitempty"`
	WolBroadcastAddr        *string                                        `json:"wol-broadcast-addr,omitempty"`
	WolMacAddr              *string                                        `json:"wol-mac-addr,omitempty"`
	WolSendPacket           *ConnectionParametersVNCWolSendPacket          `json:"wol-send-packet,omitempty"`
	WolUdpPort              *string                                        `json:"wol-udp-port,omitempty"`
	WolWaitTime             *string                                        `json:"wol-wait-time,omitempty"`
}

// ConnectionParametersVNCClipboardEncoding defines model for ConnectionParametersVNC.ClipboardEncoding.
type ConnectionParametersVNCClipboardEncoding string

// ConnectionParametersVNCColorDepth defines model for ConnectionParametersVNC.ColorDepth.
type ConnectionParametersVNCColorDepth string

// ConnectionParametersVNCCreateRecordingPath defines model for ConnectionParametersVNC.CreateRecordingPath.
type ConnectionParametersVNCCreateRecordingPath string

// ConnectionParametersVNCCursor defines model for ConnectionParametersVNC.Cursor.
type ConnectionParametersVNCCursor string

// ConnectionParametersVNCDisableCopy defines model for ConnectionParametersVNC.DisableCopy.
type ConnectionParametersVNCDisableCopy string

// ConnectionParametersVNCDisablePaste defines model for ConnectionParametersVNC.DisablePaste.
type ConnectionParametersVNCDisablePaste string

// ConnectionParametersVNCEnableAudio defines model for ConnectionParametersVNC.EnableAudio.
type ConnectionParametersVNCEnableAudio string

// ConnectionParametersVNCForceLossless defines model for ConnectionParametersVNC.ForceLossless.
type ConnectionParametersVNCForceLossless string

// ConnectionParametersVNCReadOnly defines model for ConnectionParametersVNC.ReadOnly.
type ConnectionParametersVNCReadOnly string

// ConnectionParametersVNCRecordingExcludeMouse defines model for ConnectionParametersVNC.RecordingExcludeMouse.
type ConnectionParametersVNCRecordingExcludeMouse string

// ConnectionParametersVNCRecordingExcludeOutput defines model for ConnectionParametersVNC.RecordingExcludeOutput.
type ConnectionParametersVNCRecordingExcludeOutput string

// ConnectionParametersVNCRecordingIncludeKeys defines model for ConnectionParametersVNC.RecordingIncludeKeys.
type ConnectionParametersVNCRecordingIncludeKeys string

// ConnectionParametersVNCSftpDisableDownload defines model for ConnectionParametersVNC.SftpDisableDownload.
type ConnectionParametersVNCSftpDisableDownload string

// ConnectionParametersVNCSftpDisableUpload defines model for ConnectionParametersVNC.SftpDisableUpload.
type ConnectionParametersVNCSftpDisableUpload string

// ConnectionParametersVNCSwapRedBlue defines model for ConnectionParametersVNC.SwapRedBlue.
type ConnectionParametersVNCSwapRedBlue string

// ConnectionParametersVNCWolSendPacket defines model for ConnectionParametersVNC.WolSendPacket.
type ConnectionParametersVNCWolSendPacket string

// ConnectionProtocol defines model for ConnectionProtocol.
type ConnectionProtocol string

// ConnectionRequest defines model for ConnectionRequest.
type ConnectionRequest struct {
	Attributes       ConnectionAttributes `json:"attributes"`
	Name             string               `json:"name"`
	Parameters       ConnectionParameters `json:"parameters"`
	ParentIdentifier string               `json:"parentIdentifier"`
	Protocol         ConnectionProtocol   `json:"protocol"`
}

// Connections defines model for Connections.
type Connections map[string]Connection

// JSONPatchRequestAdd defines model for JSONPatchRequestAdd.
type JSONPatchRequestAdd struct {
	// Op The operation to perform.
	Op JSONPatchRequestAddOp `json:"op"`

	// Path A JSON Pointer path.
	Path string `json:"path"`

	// Value The value to add, replace or test.
	Value interface{} `json:"value"`
}

// JSONPatchRequestAddOp The operation to perform.
type JSONPatchRequestAddOp string

// JSONPatchRequestRemove defines model for JSONPatchRequestRemove.
type JSONPatchRequestRemove struct {
	// Op The operation to perform.
	Op JSONPatchRequestRemoveOp `json:"op"`

	// Path A JSON Pointer path.
	Path string `json:"path"`
}

// JSONPatchRequestRemoveOp The operation to perform.
type JSONPatchRequestRemoveOp string

// ObjectPermissions defines model for ObjectPermissions.
type ObjectPermissions string

// PatchRequest defines model for PatchRequest.
type PatchRequest = []PatchRequest_Item

// PatchRequest_Item defines model for PatchRequest.Item.
type PatchRequest_Item struct {
	union json.RawMessage
}

// Permissions defines model for Permissions.
type Permissions struct {
	ActiveConnectionPermissions map[string][]ObjectPermissions `json:"activeConnectionPermissions"`
	ConnectionGroupPermissions  map[string][]ObjectPermissions `json:"connectionGroupPermissions"`
	ConnectionPermissions       map[string][]ObjectPermissions `json:"connectionPermissions"`
	SharingProfilePermissions   map[string][]ObjectPermissions `json:"sharingProfilePermissions"`
	SystemPermissions           []SystemPermissions            `json:"systemPermissions"`
	UserGroupPermissions        map[string][]ObjectPermissions `json:"userGroupPermissions"`
	UserPermissions             map[string][]ObjectPermissions `json:"userPermissions"`
}

// SystemPermissions defines model for SystemPermissions.
type SystemPermissions string

// Token defines model for Token.
type Token struct {
	AuthToken            string   `json:"authToken"`
	AvailableDataSources []string `json:"availableDataSources"`
	DataSource           string   `json:"dataSource"`
	Username             string   `json:"username"`
}

// TokenRequest defines model for TokenRequest.
type TokenRequest struct {
	Password string `json:"password"`
	Token    string `json:"token"`
	Username string `json:"username"`
}

// User defines model for User.
type User struct {
	Attributes UserAttributes `json:"attributes"`
	LastActive *int           `json:"lastActive,omitempty"`
	Username   string         `json:"username"`
}

// UserAttributes defines model for UserAttributes.
type UserAttributes struct {
	AccessWindowEnd        *string                 `json:"access-window-end"`
	AccessWindowStart      *string                 `json:"access-window-start"`
	Disabled               *UserAttributesDisabled `json:"disabled"`
	Expired                *UserAttributesExpired  `json:"expired"`
	GuacEmailAddress       *openapi_types.Email    `json:"guac-email-address"`
	GuacFullName           *string                 `json:"guac-full-name"`
	GuacOrganization       *string                 `json:"guac-organization"`
	GuacOrganizationalRole *string                 `json:"guac-organizational-role"`
	Timezone               *string                 `json:"timezone"`
	ValidFrom              *openapi_types.Date     `json:"valid-from"`
	ValidUntil             *openapi_types.Date     `json:"valid-until"`
}

// UserAttributesDisabled defines model for UserAttributes.Disabled.
type UserAttributesDisabled string

// UserAttributesExpired defines model for UserAttributes.Expired.
type UserAttributesExpired string

// UserGroup defines model for UserGroup.
type UserGroup struct {
	Attributes struct {
		Disabled *UserGroupAttributesDisabled `json:"disabled"`
	} `json:"attributes"`
	Identifier string `json:"identifier"`
}

// UserGroupAttributesDisabled defines model for UserGroup.Attributes.Disabled.
type UserGroupAttributesDisabled string

// UserGroups defines model for UserGroups.
type UserGroups map[string]UserGroup

// UserPassword defines model for UserPassword.
type UserPassword struct {
	NewPassword *string `json:"newPassword,omitempty"`
	OldPassword *string `json:"oldPassword,omitempty"`
}

// Users defines model for Users.
type Users map[string]User

// ConnectionID defines model for connection.
type ConnectionID = string

// ConnectionGroupID defines model for connection_group.
type ConnectionGroupID = string

// DataSource defines model for data_source.
type DataSource = string

// Group defines model for group.
type Group = string

// Username defines model for username.
type Username = string

// DeleteActiveConnectionJSONRequestBody defines body for DeleteActiveConnection for application/json ContentType.
type DeleteActiveConnectionJSONRequestBody = PatchRequest

// CreateConnectionGroupJSONRequestBody defines body for CreateConnectionGroup for application/json ContentType.
type CreateConnectionGroupJSONRequestBody = ConnectionGroup

// UpdateConnectionGroupJSONRequestBody defines body for UpdateConnectionGroup for application/json ContentType.
type UpdateConnectionGroupJSONRequestBody = ConnectionGroup

// CreateConnectionJSONRequestBody defines body for CreateConnection for application/json ContentType.
type CreateConnectionJSONRequestBody = ConnectionRequest

// UpdateConnectionJSONRequestBody defines body for UpdateConnection for application/json ContentType.
type UpdateConnectionJSONRequestBody = ConnectionRequest

// UpdateUserGroupJSONRequestBody defines body for UpdateUserGroup for application/json ContentType.
type UpdateUserGroupJSONRequestBody = UserGroup

// ModifyUserGroupMemberGroupsJSONRequestBody defines body for ModifyUserGroupMemberGroups for application/json ContentType.
type ModifyUserGroupMemberGroupsJSONRequestBody = PatchRequest

// ModifyUserGroupMembersJSONRequestBody defines body for ModifyUserGroupMembers for application/json ContentType.
type ModifyUserGroupMembersJSONRequestBody = PatchRequest

// ModifyUserGroupPermissionsJSONRequestBody defines body for ModifyUserGroupPermissions for application/json ContentType.
type ModifyUserGroupPermissionsJSONRequestBody = PatchRequest

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// UpdateUserPasswordJSONRequestBody defines body for UpdateUserPassword for application/json ContentType.
type UpdateUserPasswordJSONRequestBody = UserPassword

// ModifyUserPermissionsJSONRequestBody defines body for ModifyUserPermissions for application/json ContentType.
type ModifyUserPermissionsJSONRequestBody = PatchRequest

// ModifyUserGroupsOfUserJSONRequestBody defines body for ModifyUserGroupsOfUser for application/json ContentType.
type ModifyUserGroupsOfUserJSONRequestBody = PatchRequest

// CreateOrValidateTokenFormdataRequestBody defines body for CreateOrValidateToken for application/x-www-form-urlencoded ContentType.
type CreateOrValidateTokenFormdataRequestBody = TokenRequest

// AsConnectionParametersVNC returns the union data inside the ConnectionParameters_Item as a ConnectionParametersVNC
func (t ConnectionParameters_Item) AsConnectionParametersVNC() (ConnectionParametersVNC, error) {
	var body ConnectionParametersVNC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromConnectionParametersVNC overwrites any union data inside the ConnectionParameters_Item as the provided ConnectionParametersVNC
func (t *ConnectionParameters_Item) FromConnectionParametersVNC(v ConnectionParametersVNC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeConnectionParametersVNC performs a merge with any union data inside the ConnectionParameters_Item, using the provided ConnectionParametersVNC
func (t *ConnectionParameters_Item) MergeConnectionParametersVNC(v ConnectionParametersVNC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

// AsConnectionParametersRDP returns the union data inside the ConnectionParameters_Item as a ConnectionParametersRDP
func (t ConnectionParameters_Item) AsConnectionParametersRDP() (ConnectionParametersRDP, error) {
	var body ConnectionParametersRDP
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromConnectionParametersRDP overwrites any union data inside the ConnectionParameters_Item as the provided ConnectionParametersRDP
func (t *ConnectionParameters_Item) FromConnectionParametersRDP(v ConnectionParametersRDP) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeConnectionParametersRDP performs a merge with any union data inside the ConnectionParameters_Item, using the provided ConnectionParametersRDP
func (t *ConnectionParameters_Item) MergeConnectionParametersRDP(v ConnectionParametersRDP) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

func (t ConnectionParameters_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ConnectionParameters_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsJSONPatchRequestAdd returns the union data inside the PatchRequest_Item as a JSONPatchRequestAdd
func (t PatchRequest_Item) AsJSONPatchRequestAdd() (JSONPatchRequestAdd, error) {
	var body JSONPatchRequestAdd
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromJSONPatchRequestAdd overwrites any union data inside the PatchRequest_Item as the provided JSONPatchRequestAdd
func (t *PatchRequest_Item) FromJSONPatchRequestAdd(v JSONPatchRequestAdd) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeJSONPatchRequestAdd performs a merge with any union data inside the PatchRequest_Item, using the provided JSONPatchRequestAdd
func (t *PatchRequest_Item) MergeJSONPatchRequestAdd(v JSONPatchRequestAdd) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

// AsJSONPatchRequestRemove returns the union data inside the PatchRequest_Item as a JSONPatchRequestRemove
func (t PatchRequest_Item) AsJSONPatchRequestRemove() (JSONPatchRequestRemove, error) {
	var body JSONPatchRequestRemove
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromJSONPatchRequestRemove overwrites any union data inside the PatchRequest_Item as the provided JSONPatchRequestRemove
func (t *PatchRequest_Item) FromJSONPatchRequestRemove(v JSONPatchRequestRemove) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeJSONPatchRequestRemove performs a merge with any union data inside the PatchRequest_Item, using the provided JSONPatchRequestRemove
func (t *PatchRequest_Item) MergeJSONPatchRequestRemove(v JSONPatchRequestRemove) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

func (t PatchRequest_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PatchRequest_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

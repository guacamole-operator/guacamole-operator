apiVersion: apps/v1
kind: Deployment
metadata:
  name: guacamole
  labels:
    app.kubernetes.io/name: guacamole
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guacamole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: guacamole
    spec:
      serviceAccountName: guacamole
      initContainers:
        - name: create-init-db
          image: docker.io/guacamole/guacamole:latest
          volumeMounts:
            - name: initdb
              mountPath: /data
          command: ["/bin/sh"]
          args:
            - -c
            - |
              /opt/guacamole/bin/initdb.sh --postgres > /data/initdb.sql
        - name: loaddb
          image: docker.io/library/postgres:alpine
          volumeMounts:
            - name: initdb
              mountPath: /data
          command: ["/bin/sh"]
          args:
            - -c
            - |
              export PGPASSWORD=$POSTGRES_PASSWORD
              # most likely already created, so don't fail, just log and move on
              psql -h $POSTGRES_HOSTNAME -d $POSTGRES_DATABASE -U $POSTGRES_USER -p $POSTGRES_PORT -a -w -f /data/initdb.sql || true
      containers:
        - name: guacamole
          image: docker.io/guacamole/guacamole:latest
          env:
            - name: GUACD_HOSTNAME
              value: guacd
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
      volumes:
        - name: initdb
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: guacamole
  labels:
    app.kubernetes.io/name: guacamole
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: guacamole
